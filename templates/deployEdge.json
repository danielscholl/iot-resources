{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Small unique string."
      },
      "defaultValue": "edge"
    },
    "vnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Address Prefix CIDR"
      },
      "defaultValue": "10.1.0.0/24"
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "Subnet 1 Address Prefix CIDR"
      },
      "defaultValue": "10.1.0.0/24"
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The virtual machine server size."
      },
      "defaultValue": "Standard_DS1_v2"
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "Linux servers admin user account name."
      },
      "defaultValue": "azureuser",
      "minLength": 1
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
      },
      "defaultValue": "16.04.0-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "15.10",
        "16.04.0-LTS"
      ]
    }
  },
  "variables": {
    "VNetName": "[concat(parameters('prefix'), '-vnet')]",
    "VNetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('VNetName'))]",
    "SubnetName": "front_subnet",
    "SubNetId": "[concat(variables('VNetId'), '/subnets/', variables('SubnetName'))]",
    "NsgName": "[concat(variables('SubnetName'), '-nsg')]",
    "cleanPrefix": "[toLower(parameters('prefix'))]",
    "vmName": "[concat(variables('cleanPrefix'), '-vm')]",
    "PublicIpName": "[concat(variables('vmName'), '-ip')]",
    "NicName": "[concat(variables('vmName'),'-nic')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]"
  },
  "resources": [
    {
      "comments": "## Network Security Group ##",
      "name": "[variables('nsgName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Network Security Group - dmz"
      },
      "properties": {
        "securityRules": []
      }
    },
    {
      "comments": "## Virtual Network ##",
      "name": "[variables('VNetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ],
      "tags": {
        "displayName": "Virtual Network"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('VNetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('SubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('SubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "comments": "## Public IP Address ##",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('PublicIpName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "Company": "[parameters('prefix')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "comments": "## Network Interface ##",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('NicName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "Company": "[parameters('prefix')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('PublicIpName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NsgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "comments": "## Virtual Machine ##",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('prefix'), '-', variables('vmName'), '-vm')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
            }
          ]
        }
      },
      "resources": []
    }
  ],
  "outputs": {
    "virtualNetwork": {
      "type": "object",
      "value": {
        "id": "[variables('VNetId')]",
        "name": "[variables('VNetName')]"
      }
    },
    "subnets": {
      "type": "object",
      "value": {
        "subnet1Id": "[variables('subnetId')]"
      }
    }
  }
}
